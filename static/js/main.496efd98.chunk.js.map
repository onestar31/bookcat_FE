{"version":3,"sources":["lib/Admin.js","lib/PrivateRoute.js","lib/PublicRoute.js","components/Navigation.js","components/Top.js","components/Nickname.js","routes/Home.js","routes/Info.js","routes/Login.js","routes/Signup.js","ResultApi.js","components/Atom.js","routes/Storage.js","routes/Write.js","routes/Review.js","routes/Edit.js","routes/Detail.js","routes/SearchResult.js","components/Router.js","App.js","index.js"],"names":["isAdmin","sessionStorage","getItem","PrivateRoute","Component","component","rest","render","props","alert","to","PublicRoute","restricted","Unlist","styled","ul","List","li","Slink","NavLink","withRouter","pathname","location","active","color","current","activeStyle","Titleset","div","Title","span","Catimg","img","Link","src","process","alt","Box","Nick","Logout","button","Login","history","nickname","onClick","removeItem","window","replace","Body","Bodypic","Keyform","Form","form","Keytitle","h1","Keyexp","Keyinput","input","Search","useState","keyvalue","setKeyValue","putKeyWord","e","preventDefault","setItem","push","charSet","name","content","onSubmit","type","value","onChange","target","Infoform","NickEml","Nicktit","Email","Emailtit","Useremail","Usernick","Pswform","Pswtit","Pswbox","Boxone","Pswedit","Info","useForm","register","handleSubmit","setValue","email","changePw","data","newpw","checkpw","axios","patch","newPw","userEmail","userPw","curpw","then","response","message","catch","error","placeholder","Loginform","Password","Loginbtn","Asksignup","Signupbtn","emailState","setEmail","passwordState","setPassword","post","console","log","userName","uid","required","setNickname","password","client","create","baseURL","headers","ResultApi","params","get","persistAtom","recoilPersist","key","storage","reviewdataAtom","atom","default","effects_UNSTABLE","bookdataAtom","writedataAtom","Noform","Storeform","Bookimg","bground","Bookcontainer","Writetitle","Booktitle","Writecontent","Date","Rate","Star1","rate","Star2","Star3","Star4","Star5","datas","setDatas","thumbnail","setThumbnail","title","setTitle","noData","setNoData","setreviewdata","useSetRecoilState","booksdata","isbn","a","indexOf","slice","query","size","documents","olddata","useEffect","i","length","bookId","map","idx","id","reviewTitle","reviewDate","reviewTxt","reviewRate","userId","moveDetail","icon","faStar","Writeform","Inputbox","Textbox","textarea","Subm","Ratebox","useRecoilState","bookdata","setBookData","writedata","setWriteData","booktitle","bookTitle","bookauthor","bookAuthors","change","setChange","setRate","bid","rtitle","writeTitle","date","day","rtext","writeTxt","finally","writeSubmit","btitle","bauthor","today","getFullYear","getMonth","getDate","maxLength","defaultValue","as","Loader","Reviewform","ReviewTitle","Reviewtext","Bookinfo","Bookauthors","Bookcontents","Btn","setData","loading","setLoading","bookvalue","useRecoilValue","writevalue","author","authors","contents","gorender","setGoRender","setonChangeValue","reviewvalue","reviewbid","isbn10","isbn13","put","rid","reviewId","changeValue","defaultChecked","Edit","Delete","setBookdata","reviewdata","delete","Resultform","Resultname","Resultbox","Bookurl","Bookreview","keyword","book","href","url","toreview","Router","basename","path","Home","exact","SearchResult","Signup","Storage","Write","Review","Detail","Global","createGlobalStyle","App","className","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.496efd98.chunk.js","sourcesContent":["const isAdmin = () => {\r\n    return !!sessionStorage.getItem(\"nickname\");\r\n  };\r\n  \r\n  export default isAdmin;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport isAdmin from \"./Admin\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        !isAdmin() &&\r\n          alert(\"접근 권한이 없습니다. 로그인 후 다시 시도하십시오.\");\r\n        return isAdmin() ? <Component {...props} /> : <Redirect to=\"/login\" />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport isAdmin from \"./Admin\";\r\n\r\nconst PublicRoute = ({ component: Component, restricted, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isAdmin() && restricted ? <Redirect to=\"/\" /> : <Component {...props} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default PublicRoute;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { NavLink, withRouter } from 'react-router-dom'\r\n\r\n//네이게이션 구현\r\n\r\nconst Unlist = styled.ul`\r\ntext-align: center;\r\njustify-content: center;\r\ndisplay: flex;\r\nposition: relative;\r\nlist-style: none;\r\nflex-direction: row;\r\nfont-family: 'YanoljaYacheR';\r\nmargin-top: 26px;\r\npadding: 6px 0;\r\nbackground-color: #EBCACA;\r\nmax-width: 1100px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nfont-size: 20px;\r\n@media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        width: 600px;\r\n    }\r\n`\r\nconst List = styled.li`\r\npadding: 5px 70px 0 70px;\r\nmin-width: 55px;\r\ntext-align: center;\r\n`\r\nconst Slink = styled(NavLink)`\r\ntext-decoration: none;\r\ncolor: black;`\r\n\r\n\r\nconst Navigation = ({location:{pathname}}) => {\r\n    const active = {color: 'white'}\r\n    return (\r\n            <Unlist>\r\n                <List current={pathname==='/write'}><Slink activeStyle={active} to=\"/write\">글쓰기</Slink></List>\r\n                <List current={pathname==='/storage'}><Slink activeStyle={active} to=\"/storage\">서평공간</Slink></List>\r\n                <List current={pathname==='/login'}><Slink activeStyle={active} to=\"/login\">로그인</Slink></List>\r\n                <List current={pathname==='/info'}><Slink activeStyle={active} to=\"/info\">내 정보</Slink></List>\r\n            </Unlist>\r\n    )\r\n}\r\n\r\nexport default withRouter(Navigation)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\n//고양이와 책을 메인 타이틀//\r\nconst Titleset = styled.div`\r\ndisplay: flex;\r\ntext-align: center;\r\nalign-items: center;\r\njustify-content: center;\r\n`\r\nconst Title = styled.span`\r\nposition: relative;\r\ndisplay: flex;\r\ntop: 5px;\r\nfont-family: 'YanoljaYacheR';\r\nfont-size: 40px;\r\nmargin-top: 30px;\r\n`\r\nconst Catimg = styled.img`\r\nwidth: 65px;\r\nheight: 58px;\r\nmargin-top: 30px;\r\nposition: relative;\r\n`\r\nconst Slink = styled(Link)`\r\ntext-decoration: none;\r\ncolor: black;`\r\n\r\nconst Top = ({location:{pathname}}) => {\r\n    return (\r\n            <Titleset>\r\n            <Title current={pathname==='/'}><Slink to=\"/\">고양이와 책을</Slink></Title>\r\n            <Catimg src={`${process.env.PUBLIC_URL}/maincat2.png`} alt='메인 고양이 이미지'></Catimg>\r\n            </Titleset>\r\n    )\r\n}\r\n\r\nexport default withRouter(Top)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport {withRouter, Link} from 'react-router-dom'\r\n\r\nconst Box = styled.div`\r\nfont-family: 'YanoljaYacheR';\r\nheight: 2vh;\r\ndisplay: block;\r\ntext-align: right;\r\nmargin-right: 6%;\r\nmargin-top: 2vh;\r\n@media screen and (max-width: 1100px) {\r\n        margin-right: 4%;\r\n    }\r\n`\r\n\r\nconst Nick = styled.span``\r\n\r\nconst Slink = styled(Link)`\r\ntext-decoration: none;\r\ncolor: black;`\r\n\r\nconst Logout = styled.button`\r\nfont-family: inherit;\r\nwidth: 50px;\r\nheight: 3vh;\r\nbackground: #E8A5A5;\r\nborder: none;\r\noutline: none;`\r\n\r\nconst Login = styled.span`\r\n\r\n`\r\n\r\nconst Nickname = ({history}) => {\r\n    const nickname = sessionStorage.getItem('nickname')\r\n\r\n    const Logouts = () => {\r\n        sessionStorage.removeItem('nickname')\r\n        window.location.replace(`${history.location.pathname}`)\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n            nickname ? \r\n            <Box>\r\n            <Nick>{nickname} 님 </Nick>\r\n            <Logout onClick={Logouts}>로그아웃</Logout>\r\n            </Box> :\r\n            <Box>\r\n            <Login><Slink to={'/login'}>로그인 해주세요</Slink></Login>\r\n            </Box>\r\n        }\r\n        </> \r\n    )\r\n}\r\n\r\nexport default withRouter(Nickname)","import React, { useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Nickname from 'components/Nickname'\r\nimport { Helmet, HelmetProvider } from \"react-helmet-async\";\r\n\r\n\r\n//메인 검색 화면 및 검색 결과 화면 구현\r\n\r\nconst Body = styled.div`\r\nposition: relative;\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\n`\r\n\r\nconst Bodypic = styled.img`\r\ndisplay: flex;\r\nwidth: 950px;\r\nheight: 74vh;\r\nopacity: 55%;\r\nmargin: 0 auto;\r\n@media screen and (max-width: 500px) {\r\n       \r\n    }\r\n`\r\n\r\nconst Keyform = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nposition: absolute;\r\nbackground-color: #F5E5E5;\r\nopacity: 93%;\r\nwidth: 400px;\r\nheight: 240px;\r\nborder-radius: 20px;\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\ntop: 160px;\r\ntext-align: center;\r\nalign-items: center;\r\nvertical-align: middle;\r\n`\r\nconst Form = styled.form``\r\n\r\nconst Keytitle = styled.h1`\r\nfont-size: 32px;\r\ncolor: #D15C5C;\r\nmargin: 23px 0 ;\r\n`\r\nconst Keyexp = styled.div`\r\nmargin-bottom: 20px;\r\nfont-size: 18px;\r\n`\r\nconst Keyinput = styled.input`\r\nmargin-bottom: 20px;\r\nheight: 24px;\r\n`\r\n\r\nconst Search = styled.button`\r\nbackground-color: #CB6C6C;\r\nborder-radius: 30px;\r\nborder: none;\r\ncolor: white;\r\nwidth: 110px;\r\nheight: 35px;`\r\n\r\n\r\nconst Home = ({history}) => {\r\n    const [keyvalue, setKeyValue] = useState('')\r\n\r\n    const keyvaluefunc = (e) => {setKeyValue(e.target.value);}\r\n\r\n    const putKeyWord = (e) => {\r\n        e.preventDefault()\r\n        if (keyvalue === ''){\r\n            alert('키워드를 입력해주세요')\r\n        } else {\r\n        window.sessionStorage.setItem('keyword', keyvalue)\r\n        history.push('/searchresult')\r\n    }} \r\n    \r\n    return(\r\n        <>\r\n        <HelmetProvider>\r\n        <Helmet>\r\n            <meta charSet=\"utf-8\" />\r\n            {/* <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"></meta> */}\r\n            <title>고양이와 책을 서평 작성 웹 사이트</title>\r\n            <meta name=\"description\" content=\"'고양이와 책을'은 읽은 책에 대한 서평을 쓰고 개인 공간에 저장할 수 있는 서평 작성 사이트 입니다.\"></meta>\r\n        </Helmet>\r\n        </HelmetProvider>\r\n        <Nickname />\r\n        <Top />\r\n        <Navigation />\r\n    <Body>\r\n    <Bodypic src={`${process.env.PUBLIC_URL}/mainbookself.jpeg`} alt=\"메인페이지의 서적 배경 이미지\"></Bodypic>\r\n    <Keyform>\r\n        <Keytitle>키워드를 입력하세요</Keytitle>\r\n        <Keyexp>고양이와 책을에서 키워드에 맞는 책을 읽고<br/> 나만의 서평을 작성해보세요</Keyexp>\r\n        <Form onSubmit={putKeyWord}>\r\n        <div><Keyinput type=\"text\" value={keyvalue} onChange={keyvaluefunc}></Keyinput></div>\r\n        <Search onSubmit={putKeyWord}>검색</Search>\r\n        </Form>\r\n        </Keyform>\r\n    </Body>\r\n    </>\r\n    )}\r\n\r\nexport default withRouter(Home)","import React from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport Nickname from 'components/Nickname'\r\nimport axios from 'axios'\r\nimport { useForm } from 'react-hook-form'\r\n\r\n\r\n//내 정보 구현\r\nconst Title = styled.h1`\r\nwidth: 8rem;\r\nfont-size: 28px;\r\nmargin-top: 2.2rem;\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\ntext-align: center;\r\nalign-content: center;\r\nborder-bottom: 2px black solid;\r\npadding-bottom: 4px;\r\n`\r\n\r\nconst Infoform = styled.form`\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\nwidth: 800px;\r\nmargin-top: 3.7rem;\r\nborder: 1px solid #828282;\r\nheight: 23rem;\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-items: center;\r\n`\r\nconst NickEml = styled.div`\r\nmargin-top: 2.7rem;\r\ndisplay: flex;\r\nflex-direction: row;\r\n`\r\nconst Nick = styled.div`\r\ntext-align: start;\r\npadding-left: 13px;\r\nmargin-right: 6rem;\r\nwidth: 16rem;\r\nbackground: #F3CACA;\r\nheight: 5.7rem;\r\nborder-radius: 0.5rem;`\r\n\r\nconst Nicktit = styled.div`\r\nopacity: 60%;\r\nmargin-top: 0.7rem;`\r\n\r\nconst Email = styled.div`\r\ntext-align: start;\r\npadding-left: 13px;\r\nwidth: 16rem;\r\nbackground: #F3CACA;\r\nheight: 5.7rem;\r\nborder-radius: 0.5rem;\r\n`\r\n\r\nconst Emailtit = styled.div`\r\nopacity: 60%;\r\nmargin-top: 0.7rem;`\r\n\r\nconst Useremail = styled.div`\r\ntext-align: center;\r\nmargin-top: 1vh;\r\n`\r\nconst Usernick = styled(Useremail)``\r\n\r\nconst Pswform = styled.div`\r\ntext-align: start;\r\nmargin-top: 3.5rem;\r\ndisplay: flex;\r\nflex-direction: column;`\r\n\r\nconst Pswtit = styled.div`\r\npadding-left: 6rem;\r\nmargin-bottom: 1rem;\r\nfont-size: 17px;`\r\n\r\nconst Pswbox = styled.div`\r\npadding-left: 6rem;\r\n`\r\n\r\nconst Boxone = styled.input`\r\nborder: none;\r\nmargin-right: 3rem;\r\nwidth: 10rem;\r\nheight: 2.3rem;\r\nborder-radius: 0.5rem;\r\n:focus {outline:none;};\r\nborder: #828282 1px solid;\r\n`\r\n\r\nconst Pswedit = styled.button`\r\noutline: none;\r\nborder: none;\r\nwidth: 6rem;\r\nheight: 2.3rem;\r\ncolor: #D15C5C;\r\nborder: 1.5px solid #D15C5C;\r\nbackground-color: #FFFFFF;\r\nborder-radius: 0.5rem;\r\nmargin-top: 1.8rem;\r\nmargin-left: 34.6rem;\r\nfont-family: 'YanoljaYacheR' !important;\r\nfont-size: 15px;\r\n`\r\n\r\nconst Info = () => {\r\n    const { register, handleSubmit, setValue } = useForm()\r\n\r\n    const email = sessionStorage.getItem('email')\r\n    const nickname = sessionStorage.getItem('nickname')\r\n    const id = sessionStorage.getItem('id')\r\n\r\n    const changePw = (data) => {\r\n        if (data.newpw === data.checkpw) {\r\n            axios.patch(`http://localhost:8000/user/changepw`, {\r\n                newPw: data.newpw,\r\n                userEmail: email,\r\n                userPw: data.curpw,\r\n            })\r\n                .then(function (response) {\r\n                    alert(response.data.message);\r\n                    setValue(data.curpw, '')\r\n                })\r\n                .catch(function (error) {\r\n                    alert(error.response.data.message);\r\n                });\r\n        }\r\n        window.location.replace('info')\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Nickname />\r\n            <Top />\r\n            <Navigation />\r\n                <Title>나의 정보</Title>\r\n                <Infoform onSubmit={handleSubmit(changePw)}>\r\n                    <NickEml>\r\n                        <Nick>\r\n                            <Nicktit>닉네임</Nicktit>\r\n                            <Usernick>{nickname}</Usernick>\r\n                        </Nick>\r\n                        <Email>\r\n                            <Emailtit>이메일</Emailtit>\r\n                            <Useremail>{email}</Useremail>\r\n                        </Email>\r\n                    </NickEml>\r\n                    <Pswform>\r\n                        <Pswtit>비밀번호 변경</Pswtit>\r\n                        <Pswbox>\r\n                            <Boxone type='password' placeholder='현재 비밀번호' {...register('curpw')}></Boxone>\r\n                            <Boxone type='password' placeholder='새 비밀번호' {...register('newpw')}></Boxone>\r\n                            <Boxone type='password' placeholder='새 비밀번호 확인' {...register('checkpw')}></Boxone>\r\n                            <Pswedit onClick={handleSubmit(changePw)}>비밀번호 변경</Pswedit>\r\n                        </Pswbox>\r\n                    </Pswform>\r\n\r\n                </Infoform>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Info","import React, {useState} from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Nickname from 'components/Nickname'\r\n\r\n//로그인 구현\r\n\r\nconst Title = styled.h1`\r\nfont-family: 'OTWelcomeRA';\r\ntext-align: center;\r\nfont-weight: 500;\r\nfont-size: 23px;\r\npadding-top: 2rem;\r\nwidth: 100vw;\r\n\r\n`\r\nconst Footprint1 = styled.img`\r\nwidth: 50px;\r\nheight: 50px;\r\nposition: absolute;\r\nleft: 350px;\r\n`\r\nconst Footprint2 = styled.img`\r\nwidth: 50px;\r\nheight: 50px;\r\nposition: absolute;\r\nright: 400px;\r\nbottom: 100px;\r\n`\r\nconst Loginform = styled.form`\r\nfont-family: 'OTWelcomeRA';\r\nbackground-color: #E8A5A5;\r\nwidth: 410px;\r\nheight: 460px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nmargin-top: 30px;`\r\n\r\nconst Email = styled.input`\r\nmargin: 100px 0 0 24px;\r\nwidth: 340px;\r\nfont-size: 16px;\r\ncolor: white;\r\nbackground: transparent;\r\nborder: none;\r\nborder-bottom: solid #FFFFFF 1px;\r\n:focus{outline: none};\r\n::placeholder{color: white;font-size: 14px;}\r\n`\r\nconst Password = styled.input`\r\nmargin: 40px 0 0 24px;\r\nwidth: 340px;\r\nfont-size: 16px;\r\ncolor: white;\r\nbackground : transparent;\r\nborder: none;\r\nborder-bottom: solid #FFFFFF 1px;\r\n:focus{outline: none};\r\n::placeholder{color: white; font-size: 14px}\r\n`\r\nconst Loginbtn = styled.button`\r\ntext-align: center;\r\nborder-radius: 30px;\r\nborder: none;\r\ncolor: #D15C5C;\r\nwidth: 200px;\r\nheight: 45px;\r\nmargin-left: 50%;\r\nmargin-top: 122px;\r\nmargin-bottom: 48px;\r\ntransform: translateX(-50%);\r\n`\r\nconst Asksignup = styled.span`\r\nfont-size: 14px;\r\ncolor: white;\r\nposition: relative;\r\nmargin-left: 15%;\r\n\r\n`\r\nconst Signupbtn = styled.span`\r\nfont-size: 14px;\r\ncolor: white;\r\nmargin-left: 14%;\r\n`\r\nconst Slink = styled(Link)`\r\ntext-decoration: none;\r\ncolor: white;\r\n`\r\n\r\nconst Login = ({history}) => {\r\n    const [emailState, setEmail] = useState('')\r\n    const [passwordState, setPassword] = useState('')\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value, name}} = e\r\n        if (name === 'email'){\r\n            setEmail(value)\r\n        } else {\r\n            setPassword(value)\r\n        }\r\n    }\r\n    //submit시 서버로 axios 요청하여 login\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        axios.post(\"http://localhost:8000/user/login\", {\r\n            userEmail : emailState,\r\n            userPw : passwordState,\r\n        }).then(function(response){\r\n            console.log(response.data)\r\n            alert(response.data.message)\r\n            sessionStorage.setItem('nickname', response.data.userName) //닉네임 받아오면 emailState 대신 nickname 넣기\r\n            sessionStorage.setItem('email', response.data.userEmail)\r\n            sessionStorage.setItem('uid', response.data.uid) //비밀번호 바꾸기 위한 axios put 요청을 해당 id 주소로 보낼 때 필요\r\n\r\n           history.push('/')\r\n        }).catch(function(error){\r\n            console.log(error.response)\r\n            alert(error.response.data.message)\r\n        })\r\n    }\r\n    return(\r\n        <>\r\n    <Nickname />\r\n    <Top />\r\n    <Navigation />\r\n    <Title>로그인</Title>\r\n    {/*<Footprint1 src=\"footprint.png\"></Footprint1>*/}\r\n    <Loginform onSubmit={onSubmit}>\r\n        <Email type=\"email\" required placeholder='이메일' name='email' value={emailState} onChange={onChange}></Email><br/>\r\n        <Password type=\"password\" required placeholder='비밀번호' name='password' value={passwordState} onChange={onChange}></Password><br/>\r\n        <Loginbtn>로그인</Loginbtn><br/>\r\n        <Asksignup>아직 회원이 아니신가요?</Asksignup>\r\n        <Signupbtn><Slink to=\"/signup\">회원가입 하기</Slink></Signupbtn>\r\n    </Loginform>\r\n    {/*<Footprint2 src={process.env.PUBLIC_URL+`footprint.png`}></Footprint2>*/}\r\n    </>\r\n    )}\r\n\r\nexport default withRouter(Login)","import React, {useState} from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Nickname from 'components/Nickname'\r\n\r\n\r\n//회원가입 구현\r\n\r\nconst Title = styled.h1`\r\nfont-family: 'OTWelcomeRA';\r\ntext-align: center;\r\nfont-weight: 500;\r\nfont-size: 23px;\r\npadding-top: 2rem;\r\n\r\n`\r\nconst Footprint1 = styled.img`\r\nwidth: 50px;\r\nheight: 50px;\r\nposition: absolute;\r\nleft: 350px;\r\n`\r\nconst Footprint2 = styled.img`\r\nwidth: 50px;\r\nheight: 50px;\r\nposition: absolute;\r\nright: 400px;\r\nbottom: 100px;\r\n`\r\nconst Loginform = styled.form`\r\nfont-family: 'OTWelcomeRA';\r\nbackground-color: #E8A5A5;\r\nwidth: 410px;\r\nheight: 460px;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nmargin-top: 30px;`\r\n\r\nconst Nick = styled.input`\r\nmargin: 80px 0 0 24px;\r\nwidth: 340px;\r\nfont-size: 16px;\r\ncolor: white;\r\nbackground: transparent;\r\nborder: none;\r\nborder-bottom: solid #FFFFFF 1px;\r\n:focus{outline: none};\r\n::placeholder{color: white;font-size: 14px;}\r\n`\r\n\r\nconst Email = styled.input`\r\nmargin: 40px 0 0 24px;\r\nwidth: 340px;\r\nfont-size: 16px;\r\ncolor: white;\r\nbackground: transparent;\r\nborder: none;\r\nborder-bottom: solid #FFFFFF 1px;\r\n:focus{outline: none};\r\n::placeholder{color: white;font-size: 14px;}\r\n`\r\nconst Password = styled.input`\r\nmargin: 40px 0 0 24px;\r\nwidth: 340px;\r\nfont-size: 16px;\r\ncolor: white;\r\nbackground : transparent;\r\nborder: none;\r\nborder-bottom: solid #FFFFFF 1px;\r\n:focus{outline: none};\r\n::placeholder{color: white; font-size: 14px}\r\n`\r\nconst Loginbtn = styled.button`\r\ntext-align: center;\r\nborder-radius: 30px;\r\nborder: none;\r\ncolor: #D15C5C;\r\nwidth: 200px;\r\nheight: 45px;\r\nmargin-left: 50%;\r\nmargin-top: 80px;\r\nmargin-bottom: 47px;\r\ntransform: translateX(-50%);\r\n`\r\nconst Asksignup = styled.span`\r\nfont-size: 14px;\r\ncolor: white;\r\nposition: relative;\r\nmargin-left: 21%;\r\n\r\n`\r\nconst Signupbtn = styled.span`\r\nfont-size: 14px;\r\ncolor: white;\r\nmargin-left: 14%;\r\n`\r\nconst Slink = styled(Link)`\r\ntext-decoration: none;\r\ncolor: white;\r\n`\r\n\r\nconst Signup = ({history}) => {\r\n    const [nickname, setNickname] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const onChange = (e) => {\r\n        const {target: {value, name}} = e\r\n        if (name === 'nickname'){\r\n            setNickname(value)\r\n        } else if (name === 'email'){\r\n            setEmail(value)\r\n        } else {\r\n            setPassword(value)\r\n        }\r\n    }\r\n\r\n    \r\n// submit시 서버로 axios 요청하여 signup\r\n    const onSubmit = (e) => {\r\n      e.preventDefault()\r\n        axios.post(\"http://localhost:8000/user/create\", {\r\n        userName: nickname,\r\n        userEmail: email,\r\n        userPw: password,\r\n    }).then(function (response) {\r\n        console.log(response)\r\n        alert(response.data.message)\r\n        history.push(\"/login\");\r\n    }).catch(function (error) {\r\n        console.log(error.response);\r\n        alert(error.response.data.message)\r\n    });\r\n    }\r\n\r\n    \r\n    return(\r\n        <>\r\n    <Nickname />\r\n    <Top />\r\n    <Navigation />\r\n    <Title>회원가입</Title>\r\n    {/*<Footprint1 src=\"footprint.png\"></Footprint1>*/}\r\n    <Loginform onSubmit={onSubmit}>\r\n        <Nick type=\"text\" required placeholder='닉네임' name=\"nickname\" value={nickname} onChange={onChange}></Nick><br/>\r\n        <Email type=\"email\" required placeholder='이메일' name=\"email\" value={email} onChange={onChange}></Email><br/>\r\n        <Password type=\"password\" required placeholder='비밀번호' name=\"password\" value={password} onChange={onChange}></Password><br/>\r\n        <Loginbtn>회원가입</Loginbtn><br/>\r\n        <Asksignup>이미 회원이신가요?</Asksignup>\r\n        <Signupbtn><Slink to=\"/login\">로그인 하기</Slink></Signupbtn>\r\n    </Loginform>\r\n    {/*<Footprint2 src={process.env.PUBLIC_URL+`footprint.png`}></Footprint2>*/}\r\n    </>\r\n    )\r\n\r\n    }\r\nexport default withRouter(Signup)","import axios from 'axios';\r\n\r\n//검색 결과 화면 api\r\nconst REST_API_KEY = process.env.REACT_APP_REST_API_KEY\r\n\r\nconst client = axios.create({\r\n  baseURL: `https://dapi.kakao.com`,\r\n  headers: {\r\n    'Authorization': `KakaoAK ${REST_API_KEY}`,\r\n  },\r\n});\r\n\r\nexport const ResultApi =  (params) => {return client.get('/v3/search/book', {params})}\r\n","import { atom } from \"recoil\";\r\nimport { recoilPersist } from 'recoil-persist'\r\n\r\nconst { persistAtom } = recoilPersist({\r\n    key: 'storedatas', // this key is using to store data in local storage\r\n    storage: sessionStorage, // configurate which stroage will be used to store the data\r\n  })\r\n\r\nexport const reviewdataAtom = atom({\r\n    key: 'reviewdata',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n})\r\n\r\nexport const bookdataAtom = atom({\r\n    key: 'bookdata',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n})\r\n\r\nexport const writedataAtom = atom({\r\n    key: 'writedata',\r\n    default: [],\r\n    effects_UNSTABLE: [persistAtom],\r\n}) ","import Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport Nickname from 'components/Nickname'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { ResultApi } from '../ResultApi'\r\nimport { reviewdataAtom } from 'components/Atom'\r\nimport { useSetRecoilState } from \"recoil\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faStar } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\n\r\n//서평 공간 구현\r\n\r\nconst Body = styled.div`\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\nalign-content: center;`\r\n\r\nconst Title = styled.h1`\r\nwidth: 8rem;\r\nfont-size: 28px;\r\nmargin-top: 2.2rem;\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\ntext-align: center;\r\nalign-content: center;\r\nborder-bottom: 2px black solid;\r\npadding-bottom: 4px;\r\n`\r\nconst Noform = styled.div`\r\nfont-size: 20px;\r\nmargin: 20vh 0;`\r\n\r\nconst Storeform = styled.li`    \r\nposition: relative;\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\nalign-items: center;\r\nalign-content: center;\r\nwidth: 48rem;\r\nheight: 12rem;\r\nmargin-top: 2.7rem;\r\nmargin-left: auto;\r\nmargin-right: auto;\r\nbackground: #F3CACA;\r\n@media screen and (max-width: 700px) {\r\n        width: 500px;\r\n        height: 400px;\r\n        flex-direction: column;\r\n    }\r\n`\r\nconst Bookimg = styled.div`\r\nheight: 100%;\r\nwidth: 9.2rem;\r\nbackground-image: ${props => props.bground ? `url(${props.bground})` : `url(${process.env.PUBLIC_URL}/nobookimg.jpg)`};\r\nbackground-size : cover;\r\n@media screen and (max-width: 700px) {\r\n        height: 12rem;\r\n        margin-top: 15px;\r\n    }\r\n`\r\nconst Bookcontainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nwidth: 37rem;\r\nmargin-left: 14px;\r\nmargin-right: 14px;\r\nheight: 11.9rem;\r\ntext-align: start;\r\n@media screen and (max-width: 700px) {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nconst Writetitle = styled.div`\r\nfont-weight: 600;\r\nfont-size: 28px;\r\nmargin-top: 1.5rem;\r\nheight: 4rem;`\r\n\r\nconst Booktitle = styled.div`\r\nfont-weight: 400;\r\nfont-size: 19px;\r\nheight: 3.3rem;`\r\n\r\nconst Writecontent = styled.div`\r\nfont-weight: 100;\r\nfont-size: 16px;\r\nheight: 4.5rem;\r\nwidth: 34rem;\r\n@media screen and (max-width: 700px) {\r\n        width: 470px;\r\n        text-align: center;\r\n        margin-left: 50%;\r\n        transform: translateX(-50%);\r\n    }\r\n`\r\n\r\nconst Date = styled.div`\r\ntext-align: end;\r\nmargin-bottom: 0.3rem;\r\n@media screen and (max-width: 700px) {\r\n        position: absolute;\r\n        right: 12px;\r\n        bottom: 10px;\r\n    }\r\n`\r\nconst Rate = styled.div`\r\nposition: absolute;\r\ntop : 1.4rem;\r\nright: 1.4rem;\r\ndisplay: flex;\r\n\r\n`\r\n\r\nconst Star1 = styled.div`\r\nposition: relative;\r\ncolor: ${(props) => props.rate>4 ? '#A17E00' : 'transparent'};`\r\n\r\nconst Star2 = styled(Star1)`\r\ncolor: ${(props) => props.rate>3 ? '#A17E00' : 'transparent'};`\r\nconst Star3 = styled(Star1)`\r\ncolor: ${(props) => props.rate>2 ? '#A17E00' : 'transparent'};`\r\nconst Star4 = styled(Star1)`\r\ncolor: ${(props) => props.rate>1 ? '#A17E00' : 'transparent'};`\r\nconst Star5 = styled(Star1)`\r\ncolor: ${(props) => props.rate>0 ? '#A17E00' : 'transparent'};`\r\n\r\nconst Storage = ({history}) => {\r\n    const [datas, setDatas] = useState([]) \r\n    const [thumbnail, setThumbnail] = useState([])\r\n    const [title, setTitle] = useState([])\r\n    const [noData, setNoData] = useState(true) \r\n    const setreviewdata = useSetRecoilState(reviewdataAtom)\r\n\r\n    //장고로 부터 데이터 가져오는 api\r\n    useEffect(()=>{\r\n        axios.get('http://127.0.0.1:8000/review/')\r\n        .then((response) => {\r\n            setDatas(response.data)\r\n            console.log((response.data))\r\n            setNoData(false)\r\n        }).catch((error)=>{\r\n            console.log(error)\r\n        })\r\n    },[])\r\n\r\n    useEffect (async() => {\r\n        if (datas !== []){\r\n        for (let i=0; i<datas.length; i++){\r\n            await booksdata(datas[i].bookId)\r\n        }\r\n    }\r\n    }, [datas])\r\n\r\n     //isbn으로 책 img 가져오기\r\n    async function booksdata(isbn) {\r\n        isbn.indexOf(' ') !== -1 ? isbn = isbn.slice(11) : isbn = isbn\r\n        const params = {\r\n            target: 'isbn',\r\n            query: isbn,\r\n            size: 1,\r\n    };\r\n    const {data: {documents}} = await ResultApi(params);\r\n    setThumbnail((olddata) => [...olddata, documents[0].thumbnail])\r\n    setTitle((olddata) => [...olddata, documents[0].title])\r\n    }\r\n\r\n    //book id를 이용해 상세페이지로 이동 \r\n    const moveDetail = (data) => {\r\n        console.log(data)       //변수 이름 맞는지 확인하기\r\n        setreviewdata(() => [{'bookId': data.bookId, 'reviewId': data.id, 'reviewTitle': data.reviewTitle, 'reviewDate': data.reviewDate, 'reviewTxt': data.reviewTxt, 'reviewRate': data.reviewRate, 'userId': data.userId}])\r\n        history.push(`/detail`)        //reviewId 추가\r\n    }\r\n   \r\n    return(\r\n        <>\r\n        <Nickname />\r\n        <Top />\r\n        <Navigation />\r\n    <Body>\r\n        <Title>서평 공간</Title>\r\n        {noData ? <Noform>작성한 서평이 없습니다</Noform> : \r\n        <ul>\r\n        {datas && datas.map((data, idx)=> <Storeform key={data.id} onClick={() => moveDetail(data)}>\r\n                <Bookimg bground={thumbnail[idx]}></Bookimg>\r\n                <Rate>\r\n                <Star1 rate={data.reviewRate}><FontAwesomeIcon icon={faStar} /></Star1>\r\n                <Star2 rate={data.reviewRate}><FontAwesomeIcon icon={faStar} /></Star2>\r\n                <Star3 rate={data.reviewRate}><FontAwesomeIcon icon={faStar} /></Star3>\r\n                <Star4 rate={data.reviewRate}><FontAwesomeIcon icon={faStar} /></Star4>\r\n                <Star5 rate={data.reviewRate}><FontAwesomeIcon icon={faStar} /></Star5>\r\n                </Rate>\r\n                <Bookcontainer>\r\n                <Writetitle>{data.reviewTitle}</Writetitle>   {/*// 모델 수정 必 */}\r\n                <Booktitle>{title[idx]}</Booktitle>    \r\n                <Writecontent>{data.reviewTxt.length>129 ? data.reviewTxt.slice(0,130)+'...' : data.reviewTxt}</Writecontent>\r\n               {/* rid 받아서 리뷰 구분할 필요 없을까?*/}\r\n               <Date>{data.reviewDate}</Date>\r\n                </Bookcontainer>\r\n            </Storeform>\r\n        )}\r\n        </ul>\r\n    }\r\n    </Body>\r\n    </>\r\n    )}\r\n\r\nexport default withRouter(Storage)","import React, { useEffect, useState} from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport { withRouter } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport Nickname from 'components/Nickname'\r\nimport { useForm } from 'react-hook-form'\r\nimport { bookdataAtom } from 'components/Atom'\r\nimport { writedataAtom } from 'components/Atom'\r\nimport { useRecoilState } from 'recoil'\r\n\r\n//서평쓰기 폼 구현\r\n\r\nconst Body = styled.div`\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\nalign-content: center;`\r\n\r\nconst Title = styled.div`\r\nwidth: 8rem;\r\nfont-size: 28px;\r\nmargin-top: 2.2rem;\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\ntext-align: center;\r\nalign-content: center;\r\nborder-bottom: 2px black solid;\r\npadding-bottom: 4px;\r\n`\r\n\r\nconst Writeform = styled.form`\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\nmargin-top: 3.7rem;\r\nheight: 25rem;\r\nmax-width: 50rem;\r\nmin-width: 400px;\r\nfont-size: 12px;\r\n@media screen and (max-width: 700px) {\r\n        \r\n    }\r\n`\r\n\r\nconst Inputbox = styled.input`\r\nborder: none;\r\nborder-top: 2px solid #828282;\r\nheight: 2rem;\r\nwidth: 100%;\r\n:focus {outline:none;};\r\nfont-size: 15px;\r\npadding-left: 7px;\r\n`\r\n\r\nconst Textbox = styled.textarea`\r\nborder: 2px solid #828282;\r\nheight: 18rem;\r\nwidth: 100%;\r\n:focus {outline:none;};\r\nresize: none;\r\nfont-size: 13px;\r\npadding-left: 7px;\r\npadding-top: 7px;\r\n`\r\n\r\nconst Subm = styled.button`\r\nmargin-left: 100%;\r\ntransform: translateX(-100%);\r\nmargin-top: 1rem;\r\nwidth: 7.5rem;\r\nheight: 2.3rem;\r\nbackground: #E8A5A5;\r\nborder: none;\r\noutline: none;\r\nfont-family: 'YanoljaYacheR' !important;\r\nfont-size: 17px;`\r\n\r\nconst Ratebox = styled.input`\r\nmargin-top: 0.5rem;`\r\n\r\nconst Rate = styled(Inputbox)`\r\ntext-align: start;`\r\n\r\nconst Write = ({history}) => {\r\n    \r\n    const [bookdata, setBookData] = useRecoilState(bookdataAtom)\r\n    const [writedata, setWriteData] = useRecoilState(writedataAtom)\r\n\r\n    const booktitle = (history.location.pathname === '/write') ? '' : bookdata[0].bookTitle //삼항 연산자 사용하여 홈페이지에 따른 정보 뷰 상태 변환\r\n    const bookauthor = (history.location.pathname === '/write') ? '' : bookdata[0].bookAuthors //삼항 연산자 사용하여 홈페이지에 따른 정보 뷰 상태 변환\r\n\r\n    //const rtitle = writedata.writeTitle\r\n\r\n    const [change, setChange] = useState(false)\r\n    const [rate, setRate] = useState(0)\r\n    const { register, handleSubmit } = useForm() //useForm react-hook 사용 //new 주석\r\n\r\n    //writeSubmit가 구동된 후 change 상태가 변화할 때 시행되는 장고로 데이터 post 하는 코드\r\n    useEffect(()=> {\r\n        if (change){\r\n        axios.post(\"http://127.0.0.1:8000/review/\", {\r\n            uid : sessionStorage.getItem('uid'),\r\n            bid : bookdata[0].isbn,\r\n            rtitle : writedata[0].writeTitle,\r\n            date : day, //주석\r\n            rtext: writedata[0].writeTxt,\r\n            rate: +rate\r\n        }).then(function(response) {\r\n            console.log(response)\r\n            alert(response.data.message)\r\n        }).catch(function(error) {\r\n            console.log(error)\r\n            alert('문제가 발생했습니다.')\r\n        }).finally(() => {\r\n           history.push('/review')\r\n        })}\r\n    },[change])\r\n\r\n    //onSubmit를 한 경우 시행되는 코드 \r\n    const writeSubmit = async (data) => {\r\n        setWriteData(()=> [{'writeTitle': data.rtitle, 'writeTxt': data.rtext}])\r\n        if (history.location.pathname === '/write'){\r\n        setBookData(()=> [{'bookTitle': data.btitle, 'bookAuthors': data.bauthor}])\r\n        }\r\n        setChange(true)\r\n    }\r\n\r\n    //서평 작성 날짜 \r\n    const today = new Date()\r\n    const year = today.getFullYear()\r\n    const month = today.getMonth()\r\n    const date = today.getDate()\r\n    const day = year+'.'+month+'.'+(date+1)+'.'\r\n\r\n   /*  //rate ★\r\n    let star = ''\r\n    let starlist = []\r\n    for (let i=0; i<5; i++){\r\n        star += '★'\r\n        starlist.push(star)\r\n    } */\r\n     \r\n    return(\r\n        <>\r\n        <Nickname />\r\n        <Top />\r\n        <Navigation />\r\n        <Body>\r\n        <Title>글쓰기</Title>\r\n        <Writeform onSubmit={handleSubmit(writeSubmit)}>\r\n            <Inputbox  placeholder='제목' {...register(\"rtitle\", {required: \"input your title\", maxLength: 30})}></Inputbox>\r\n            <Inputbox  placeholder='책 제목' {...register(\"btitle\", {required: \"input book title\"})} defaultValue={booktitle}></Inputbox>\r\n            <Inputbox  placeholder='지은이' {...register(\"bauthor\", {required: \"input author\"})} defaultValue={bookauthor}></Inputbox>\r\n            <Rate as=\"div\">\r\n            <Ratebox  type=\"radio\" name=\"rate\" value=\"1\" onClick={(e)=> setRate(e.target.value)} />★\r\n            <Ratebox  type=\"radio\" name=\"rate\" value=\"2\" onClick={(e)=> setRate(e.target.value)}/>★★\r\n            <Ratebox  type=\"radio\" name=\"rate\" value=\"3\" onClick={(e)=> setRate(e.target.value)}/>★★★\r\n            <Ratebox  type=\"radio\" name=\"rate\" value=\"4\" onClick={(e)=> setRate(e.target.value)}/>★★★★\r\n            <Ratebox  type=\"radio\" name=\"rate\" value=\"5\" onClick={(e)=> setRate(e.target.value)}/>★★★★★\r\n            </Rate>\r\n            <Textbox  {...register(\"rtext\", {required: \"input your text\", maxLength: 1000})}></Textbox>\r\n            <Subm  onClick={handleSubmit(writeSubmit)}>등록</Subm>\r\n        </Writeform>\r\n    </Body> \r\n    </>\r\n    )}\r\n\r\nexport default withRouter(Write)","import React, {useState, useEffect} from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport Nickname from 'components/Nickname'\r\nimport { ResultApi } from '../ResultApi'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { bookdataAtom } from 'components/Atom'\r\nimport { writedataAtom } from 'components/Atom'\r\nimport { useRecoilValue } from 'recoil'\r\n\r\n//서평 공간 구현\r\nconst Loader = styled.div`\r\ndisplay: block;\r\ntext-align: center;\r\nmargin: 30vh 0;`\r\n\r\nconst Body = styled.div`\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;`\r\n\r\nconst Reviewform = styled.div`\r\nmargin-top: 2rem;\r\nmax-width: 50rem;\r\nheight: auto;\r\nmin-height: 31rem;\r\nbackground: #F5E5E5;\r\ntext-align: center;\r\nalign-items: center;\r\nalign-content: center;\r\n@media screen and (max-width: 700px) {\r\n    height: auto;\r\n    }`\r\n\r\nconst ReviewTitle = styled.div`\r\npadding-top: 2rem;\r\npadding-bottom: 1rem;\r\nfont-size: 30px;\r\n`\r\nconst Reviewtext = styled.div`\r\nwidth: 40rem;\r\ntext-align: start;\r\npadding-left: 5.6rem;\r\npadding-top: 1rem;\r\nfont-size: 19px;\r\npadding-bottom: 2rem;\r\n@media screen and (max-width: 700px) {\r\n        text-align: center;\r\n    }`\r\n\r\nconst Bookinfo = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nalign-content: center;\r\nwidth: 45rem;\r\nheight: 15rem;\r\nmargin-top: 0.5rem;\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\nborder-top: 0.1rem solid black;\r\nborder-bottom: 0.1rem solid black;\r\n@media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        height: 30rem;\r\n    }\r\n`\r\nconst Bookimg = styled.img`\r\nheight: 90%;\r\n@media screen and (max-width: 700px) {\r\n    margin-top: 15px;\r\n    margin-bottom: 10px;\r\n    width: 150px;\r\n    height: 220px;\r\n    }\r\n`\r\nconst Bookcontainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-left: 14px;\r\nmargin-right: 14px;\r\ntext-align: start;\r\n@media screen and (max-width: 700px) {\r\n        text-align: center;\r\n    }`\r\n\r\nconst Booktitle = styled.div`\r\nfont-size: 28px;\r\nmargin-bottom: 1rem;`\r\n\r\nconst Bookauthors = styled.div`\r\nfont-size: 23px;\r\nmargin-bottom: 1rem;`\r\n\r\nconst Bookcontents = styled.div`\r\nfont-size: 19px;\r\nwidth: 34rem;`\r\n\r\nconst Btn = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;`\r\n\r\nconst List = styled.button`\r\nmargin-top: 1rem;\r\nmargin-right: 1rem;\r\nwidth: 7.5rem;\r\nheight: 2.3rem;\r\nbackground: #E8A5A5;\r\nborder: none;\r\noutline: none;\r\nfont-family: 'YanoljaYacheR' !important;\r\nfont-size: 17px;\r\ncursor: pointer;`\r\n\r\n\r\nconst Review = ({history}) => {\r\n    const [data, setData] = useState('')\r\n    const [loading, setLoading] = useState(true)\r\n    const bookvalue = useRecoilValue(bookdataAtom)\r\n    const writevalue = useRecoilValue(writedataAtom)\r\n\r\n    //카카오 api 가져오기 \r\n    async function booksdata(title, author) {\r\n        const params = {\r\n            target: 'title' & 'person',\r\n            query: title, author,\r\n            size: 1,\r\n    };\r\n    const {data: {documents}} = await ResultApi(params); console.log(documents);\r\n    setData(documents[0])\r\n} \r\n\r\n    useEffect(() => {\r\n       booksdata(bookvalue[0].bookTitle, bookvalue[0].bookAuthors)\r\n        setLoading(false)\r\n    },[])\r\n\r\n    //서평 공간으로 이동\r\n    const moveStorage = () => {\r\n        history.push('/storage')\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Nickname />\r\n        <Top />\r\n        <Navigation />\r\n        {loading ? <Loader>Loading...</Loader> : \r\n    <Body>\r\n        <Reviewform>\r\n            <ReviewTitle>{writevalue[0].writeTitle}</ReviewTitle>\r\n            <Bookinfo>\r\n                <Bookimg src={data.thumbnail}></Bookimg>\r\n                <Bookcontainer>\r\n                <Booktitle>{data.title}</Booktitle>\r\n                <Bookauthors>{data.authors}</Bookauthors>\r\n                <Bookcontents>{data.contents}...</Bookcontents>\r\n                </Bookcontainer>\r\n            </Bookinfo>\r\n            <Reviewtext>{writevalue[0].writeTxt}</Reviewtext>\r\n        </Reviewform>        \r\n        <Btn>\r\n       <List onClick={moveStorage}>목록</List>\r\n        </Btn>\r\n    </Body>\r\n    }\r\n    </>\r\n    )}\r\n\r\nexport default withRouter(Review)","import React, { useEffect, useState} from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { ResultApi } from '../ResultApi'\r\nimport axios from 'axios'\r\nimport Nickname from 'components/Nickname'\r\nimport { useForm } from 'react-hook-form'\r\nimport { reviewdataAtom, bookdataAtom, writedataAtom } from 'components/Atom'\r\nimport { useRecoilValue, useRecoilState } from 'recoil'\r\n\r\n//서평쓰기 폼 구현\r\n\r\nconst Body = styled.div`\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\nalign-content: center;`\r\n\r\nconst Title = styled.h1`\r\nwidth: 8rem;\r\nfont-size: 28px;\r\nmargin-top: 2.2rem;\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\ntext-align: center;\r\nalign-content: center;\r\nborder-bottom: 2px black solid;\r\npadding-bottom: 4px;\r\n`\r\n\r\nconst Writeform = styled.form`\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\nmargin-top: 3.7rem;\r\nheight: 25rem;\r\nmax-width: 50rem;\r\nmin-width: 400px;\r\nfont-size: 12px;\r\n@media screen and (max-width: 700px) {\r\n    }\r\n`\r\n\r\nconst Inputbox = styled.input`\r\nborder: none;\r\nborder-top: 2px solid #828282;\r\nheight: 2rem;\r\nwidth: 100%;\r\n:focus {outline:none;};\r\nfont-size: 15px;\r\npadding-left: 7px;\r\n`\r\n\r\nconst Textbox = styled.textarea`\r\nborder: 2px solid #828282;\r\nheight: 18rem;\r\nwidth: 100%;\r\n:focus {outline:none;};\r\nresize: none;\r\nfont-size: 13px;\r\npadding-left: 7px;\r\npadding-top: 7px;\r\n`\r\n\r\nconst Subm = styled.button`\r\nmargin-left: 100%;\r\ntransform: translateX(-100%);\r\nmargin-top: 1rem;\r\nwidth: 7.5rem;\r\nheight: 2.3rem;\r\nbackground: #E8A5A5;\r\nborder: none;\r\noutline: none;\r\nfont-family: 'YanoljaYacheR' !important;\r\nfont-size: 17px;`\r\n\r\nconst Ratebox = styled.input`\r\nmargin-top: 0.5rem;`\r\n\r\nconst Rate = styled(Inputbox)`\r\ntext-align: start;`\r\n\r\nconst Edit = ({history}) => {\r\n    const [datas, setDatas] = useState('')\r\n    const [rate, setRate] = useState(0)\r\n    const [change, setChange] = useState(false)\r\n    const [gorender, setGoRender] = useState(false)\r\n    const [onChangeValue, setonChangeValue] = useState('')\r\n    const { register, handleSubmit } = useForm() //useForm react-hook 사용\r\n    const reviewvalue = useRecoilValue(reviewdataAtom) \r\n    const [bookdata, setBookData] = useRecoilState(bookdataAtom)\r\n    const [writedata, setWriteData] = useRecoilState(writedataAtom)\r\n\r\n    const reviewbid = reviewvalue[0].bookId\r\n\r\n    useEffect(async()=>{\r\n        if (reviewbid.indexOf(' ') !== -1){ //isbn10과 isbn13이 동시에 주어진 경우\r\n        const isbn10 = reviewbid.slice(0,10)\r\n        const isbn13 = reviewbid.slice(11)\r\n        await booksdata(isbn10, isbn13)\r\n    } else {\r\n        await booksdata(reviewbid)\r\n    }\r\n    setGoRender(true)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if (change){\r\n        axios.put(\"http://127.0.0.1:8000/review/edit/\", { //put 보내는 url 확인\r\n        uid : sessionStorage.getItem('uid'),\r\n        bid : datas.isbn, // bid string 으로 받는 거 확인\r\n        rid : reviewvalue[0].reviewId,  //reviewId 추가\r\n        rtitle : writedata[0].writeTitle,\r\n        rtext: writedata[0].writeTxt,\r\n        rate\r\n    }).then(function(response) {\r\n        console.log(response)\r\n        alert(response.data.message)\r\n    }).catch(function(error) {\r\n        console.log(error)\r\n        alert('문제가 발생했습니다.')\r\n    }).finally(() => {\r\n        history.push('/review')\r\n    })}\r\n    }, [change])\r\n\r\n    //onSubmit를 한 경우 시행되는 코드 \r\n    const writeSubmit = (data) => {\r\n        setWriteData(()=> [{'writeTitle': data.rtitle, 'writeTxt': data.rtext}])\r\n        setChange(true)\r\n    }\r\n\r\n    //서평 책 정보 카카오 api로 불러오기 함수\r\n    async function booksdata(isbn10, isbn13) {\r\n        const params = {\r\n            target: 'isbn',\r\n            query: isbn10 || isbn13,\r\n            size: 1,\r\n    };\r\n    const {data: {documents}} = await ResultApi(params); console.log(documents); \r\n    setBookData(()=> [{'bookTitle': documents[0].title, 'bookAuthors': documents[0].authors}])\r\n    setDatas(documents[0])\r\n    } \r\n\r\n    const onChange = (e) => {\r\n        setRate(e.target.value)\r\n    }\r\n     \r\n    const changeValue = (e) => {\r\n        setonChangeValue(e.target.value)\r\n    }\r\n\r\n    const limitTextLength = (e) => {\r\n        if (e.target.value.length > 1000) {\r\n            alert('제한 글자수 초과입니다.')\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Nickname />\r\n        <Top />\r\n        <Navigation />\r\n        <Body>\r\n        <Title>글쓰기</Title>\r\n        <Writeform onSubmit={handleSubmit(writeSubmit)}>\r\n            <Inputbox  placeholder='제목' {...register(\"rtitle\", {required: \"input your title\", maxLength: 30})} maxLength='30' defaultValue={reviewvalue[0].reviewTitle}></Inputbox>\r\n            <Inputbox  placeholder='책 제목' required onChange={changeValue} value={ gorender ? bookdata[0].bookTitle : null}></Inputbox>\r\n            <Inputbox  placeholder='지은이' required onChange={changeValue} value={ gorender ? bookdata[0].bookAuthors : null}></Inputbox>\r\n            <Rate as=\"div\" onChange={onChange}>\r\n                <Ratebox type=\"radio\" name=\"rate\" value={1} defaultChecked={reviewvalue[0].reviewRate===1 ? true : false}/>★  \r\n                <Ratebox type=\"radio\" name=\"rate\" value={2} defaultChecked={reviewvalue[0].reviewRate===2 ? true : false}/>★★   \r\n                <Ratebox type=\"radio\" name=\"rate\" value={3} defaultChecked={reviewvalue[0].reviewRate===3 ? true : false}/>★★★ \r\n                <Ratebox type=\"radio\" name=\"rate\" value={4} defaultChecked={reviewvalue[0].reviewRate===4 ? true : false}/>★★★★    \r\n                <Ratebox type=\"radio\" name=\"rate\" value={5} defaultChecked={reviewvalue[0].reviewRate===5 ? true : false}/>★★★★★  \r\n            </Rate>\r\n            <Textbox  {...register(\"rtext\", {required: \"input your text\", maxLength: 1000})} defaultValue={reviewvalue[0].reviewTxt} onChange={limitTextLength}></Textbox>\r\n            <Subm  onClick={handleSubmit(writeSubmit)}>수정</Subm>\r\n        </Writeform>\r\n    </Body> \r\n    </>\r\n    )}\r\n\r\nexport default withRouter(Edit)","import React from 'react'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport styled from 'styled-components'\r\nimport { useEffect, useState } from 'react/cjs/react.development'\r\nimport axios from 'axios'\r\nimport Nickname from 'components/Nickname'\r\nimport { ResultApi } from '../ResultApi'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { reviewdataAtom } from 'components/Atom'\r\nimport { useRecoilValue } from 'recoil'\r\n\r\n//서평 공간 구현\r\nconst Loader = styled.div`\r\ndisplay: block;\r\ntext-align: center;\r\nmargin: 30vh 0;`\r\n\r\nconst Body = styled.div`\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\nflex-direction: column;\r\ntext-align: center;\r\nalign-content: center;\r\nalign-items: center;`\r\n\r\nconst Reviewform = styled.div`\r\nmargin-top: 2rem;\r\nwidth: 50rem;\r\nheight: auto;\r\nmin-height: 31rem;\r\nbackground: #F5E5E5;\r\ntext-align: center;\r\nalign-items: center;\r\nalign-content: center;\r\n@media screen and (max-width: 700px) {\r\n    height: auto;\r\n    }`\r\n\r\nconst ReviewTitle = styled.div`\r\npadding-top: 2rem;\r\npadding-bottom: 1rem;\r\nfont-size: 30px;\r\n`\r\nconst Reviewtext = styled.div`\r\nwidth: 40rem;\r\ntext-align: start;\r\npadding-left: 5.6rem;\r\npadding-top: 1rem;\r\nfont-size: 19px;\r\npadding-bottom: 2rem;\r\n@media screen and (max-width: 700px) {\r\n        text-align: center;\r\n    }`\r\n\r\nconst Bookinfo = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nalign-content: center;\r\nwidth: 45rem;\r\nheight: 15rem;\r\nmargin-top: 0.5rem;\r\nmargin-left: 50%;\r\ntransform: translateX(-50%);\r\nborder-top: 0.1rem solid black;\r\nborder-bottom: 0.1rem solid black;\r\n@media screen and (max-width: 700px) {\r\n        flex-direction: column;\r\n        height: 30rem;\r\n    }\r\n`\r\n\r\nconst Bookimg = styled.img`\r\nheight: 90%;\r\n@media screen and (max-width: 700px) {\r\n    margin-top: 15px;\r\n    margin-bottom: 10px;\r\n    width: 150px;\r\n    height: 220px;\r\n    }\r\n`\r\nconst Bookcontainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-left: 14px;\r\nmargin-right: 14px;\r\ntext-align: start;\r\n@media screen and (max-width: 700px) {\r\n        text-align: center;\r\n    }\r\n`\r\n\r\nconst Booktitle = styled.div`\r\nfont-size: 28px;\r\nmargin-bottom: 1rem;`\r\n\r\nconst Bookauthors = styled.div`\r\nfont-size: 23px;\r\nmargin-bottom: 1rem;`\r\n\r\nconst Bookcontents = styled.div`\r\nfont-size: 19px;\r\nwidth: 34rem;`\r\n\r\nconst Btn = styled.div`\r\ndisplay: flex;\r\nflex-direction: row;`\r\n\r\nconst Edit = styled.button`\r\nmargin-top: 1rem;\r\nmargin-right: 1rem;\r\nwidth: 7.5rem;\r\nheight: 2.3rem;\r\nbackground: #E8A5A5;\r\nborder: none;\r\noutline: none;\r\nfont-family: 'YanoljaYacheR' !important;\r\nfont-size: 17px;`\r\n\r\nconst Delete = styled.button`\r\nmargin-top: 1rem;\r\nwidth: 7.5rem;\r\nheight: 2.3rem;\r\nbackground: #E8A5A5;\r\nborder: none;\r\noutline: none;\r\nfont-family: 'YanoljaYacheR' !important;\r\nfont-size: 17px;`\r\n\r\nconst Detail = ({history}) => {\r\n    const [bookdata, setBookdata] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const reviewdata = useRecoilValue(reviewdataAtom) \r\n    const reviewbid = reviewdata[0].bookId\r\n\r\n\r\n    //bid로 책 정보 가져오기\r\n    async function booksdata(isbn10, isbn13) {\r\n        const params = {\r\n            target: 'isbn',\r\n            query: isbn10 || isbn13,\r\n            size: 1,\r\n    };\r\n    const {data: {documents}} = await ResultApi(params); console.log(documents); \r\n    setBookdata(documents[0])\r\n    } \r\n\r\n    useEffect(() => {\r\n        if (reviewbid.indexOf(' ') !== -1){ //isbn10과 isbn13이 동시에 주어진 경우\r\n            const isbn10 = reviewbid.slice(0,10)\r\n            const isbn13 = reviewbid.slice(11)\r\n            booksdata(isbn10, isbn13)\r\n        } else {\r\n            booksdata(reviewbid)\r\n        }\r\n        setLoading(false) //loading 이 너무 빨리 이루어진다 싶으면 async await 걸기\r\n    },[])\r\n    \r\n    const moveEdit = () => {\r\n        history.push('/edit')\r\n    }\r\n\r\n    //삭제 버튼 누르면 삭제 \r\n    const goDelete = () => {\r\n        console.log(reviewdata[0].reviewId)\r\n        axios.delete('http://127.0.0.1:8000/review/delete/', {data : {\r\n        reviewId : reviewdata[0].reviewId\r\n    }})\r\n    .then(function (response) {\r\n        alert(response.data.message)\r\n        console.log(response);\r\n        history.push('/storage')\r\n    })\r\n    .catch(function (error) {\r\n        alert(error.response.data.message)\r\n        console.log(error);\r\n    })\r\n    }\r\n\r\n    return(\r\n        <>\r\n        <Nickname />\r\n        <Top />\r\n        <Navigation />\r\n        {loading ? <Loader>Loading...</Loader> : \r\n    <Body>\r\n        <Reviewform>\r\n            <ReviewTitle>{reviewdata[0].reviewTitle}</ReviewTitle>\r\n            <Bookinfo>\r\n                <Bookimg src={bookdata?.thumbnail}></Bookimg>\r\n                <Bookcontainer>\r\n                <Booktitle>{bookdata?.title}</Booktitle>\r\n                <Bookauthors>{bookdata?.authors}</Bookauthors>\r\n                <Bookcontents>{bookdata.contents}...</Bookcontents>\r\n                </Bookcontainer>\r\n            </Bookinfo>\r\n            <Reviewtext>{reviewdata[0].reviewTxt}</Reviewtext>\r\n        </Reviewform>\r\n        <Btn>\r\n       <Edit onClick={moveEdit}>수정</Edit>\r\n        <Delete onClick={goDelete}>삭제</Delete>\r\n        </Btn>\r\n    </Body>\r\n    }\r\n    </>\r\n)}\r\n\r\nexport default withRouter(Detail)","\r\nimport React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Navigation from '../components/Navigation'\r\nimport Top from '../components/Top'\r\nimport { ResultApi } from '../ResultApi'\r\nimport {withRouter} from 'react-router-dom'\r\nimport Nickname from 'components/Nickname'\r\nimport {bookdataAtom} from 'components/Atom'\r\nimport {useSetRecoilState} from 'recoil' \r\n\r\n//메인 검색 화면 및 검색 결과 화면 구현\r\n\r\nconst Resultform = styled.div`\r\nfont-family: 'YanoljaYacheR';\r\ndisplay: flex;\r\nflex-direction: column;\r\nalign-content: center;\r\nalign-items: center;\r\n`\r\n\r\nconst Resultname = styled.h1`\r\nmargin-top: 5rem;\r\ntext-align: center;\r\nfont-size: 30px;`\r\n\r\nconst Resultbox = styled.div`\r\ndisplay: flex;\r\nalign-items: center;\r\nalign-content: center;\r\n\r\nwidth: 50rem;\r\nheight: 21rem;\r\nmargin-top: 4rem;\r\nbackground: #EBCACA;\r\n@media screen and (max-width: 700px) {\r\n        width: 500px;\r\n        min-height: 520px;\r\n        flex-direction: column;\r\n    }`\r\n\r\nconst Bookimg = styled.img`\r\nheight: 90%;\r\nmargin-left: 2%;\r\n@media screen and (max-width: 700px) {\r\n        height: 12rem;\r\n        margin-top: 15px;\r\n    }\r\n`\r\nconst Bookcontainer = styled.div`\r\ndisplay: flex;\r\nflex-direction: column;\r\nmargin-left: 14px;\r\nmargin-right: 14px;\r\n@media screen and (max-width: 700px) {\r\n        text-align: center;\r\n    }`\r\n\r\nconst Booktitle = styled.div`\r\nfont-size: 28px;\r\nmargin-bottom: 1rem;\r\n@media screen and (max-width: 700px) {\r\n        margin-top: 10px;\r\n    }`\r\n\r\nconst Bookauthors = styled.div`\r\nfont-size: 23px;\r\nmargin-bottom: 1rem;`\r\n\r\nconst Bookcontents = styled.div`\r\nfont-size: 19px;\r\nwidth: 34rem;\r\n@media screen and (max-width: 700px) {\r\n        width: 470px;\r\n        text-align: center;\r\n        margin-left: 50%;\r\n        transform: translateX(-50%);\r\n    }`\r\n\r\nconst Bookurl = styled.a`\r\ntext-decoration: none;\r\nmargin-top: 1rem;\r\nfont-size: 19px;\r\ncolor: #C05F5F;\r\nwidth: 1.7rem;\r\nborder-bottom: 1px solid #C05F5F;\r\n@media screen and (max-width: 700px) {\r\n    transform: translateX(-50%);\r\n    margin-left: 50%;\r\n    margin-bottom: 10px;\r\n        text-align: center;\r\n    }`\r\n\r\nconst Bookreview = styled.button`\r\nborder: none;\r\noutline: none;\r\nfont-family: inherit !important;\r\nfont-size: 20px;\r\nwidth: 5rem;\r\npadding: 5px 0px;\r\nmargin-top: 1rem;\r\nmargin-left: 80%;\r\ntext-align: center;\r\nbackground: #E8A5A5;\r\n@media screen and (max-width: 700px) {\r\n        margin: 0 auto;\r\n    }`\r\n\r\nconst SearchResult = ({history}) => {\r\n    const [data, setData] = useState([])\r\n    const keyword = window.sessionStorage.getItem('keyword')\r\n    const setBookData = useSetRecoilState(bookdataAtom)\r\n\r\n    async function booksdata(keyword) {\r\n        const params = {\r\n            target: 'title',\r\n            query: keyword,\r\n            size: 5,\r\n    };\r\n    const {data: {documents}} = await ResultApi(params); console.log(documents);\r\n    setData(documents)\r\n    \r\n} \r\n    useEffect (() => {\r\n        booksdata(keyword)\r\n    }, [])\r\n    \r\n    const toreview = (book) =>{\r\n        setBookData(()=> [{'isbn': book.isbn, 'bookTitle': book.title, 'bookAuthors': book.authors}])\r\n        let id = book.isbn\r\n        history.push(`/write/${id}`)\r\n    }\r\n    \r\n    return(\r\n        <>\r\n    <   Nickname />\r\n        <Top />\r\n        <Navigation />\r\n    <Resultform>\r\n        <Resultname>'{keyword}' 검색한 결과</Resultname> \r\n    {data.map((book)=> <Resultbox key={book.isbn}>\r\n        <Bookimg src={book.thumbnail || `${process.env.PUBLIC_URL}/nobookimg.jpg`}></Bookimg>\r\n        <Bookcontainer>\r\n        <Booktitle>{book.title}</Booktitle>\r\n        <Bookauthors>{book.authors}</Bookauthors>\r\n        <Bookcontents>{book.contents}...</Bookcontents>\r\n        <Bookurl href={book.url}  target='_blank'>링크</Bookurl>\r\n        <Bookreview onClick={() => toreview(book)}>서평 쓰기</Bookreview>\r\n        </Bookcontainer>\r\n        </Resultbox>)}\r\n    </Resultform>\r\n    </>\r\n    )}\r\n\r\nexport default withRouter(SearchResult)","import React from \"react\";\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\r\nimport PrivateRoute from \"lib/PrivateRoute\";\r\nimport PublicRoute from \"lib/PublicRoute\";\r\nimport Home from '../routes/Home'\r\nimport Info from \"../routes/Info\";\r\nimport Login from '../routes/Login'\r\nimport Signup from '../routes/Signup'\r\nimport Storage from \"../routes/Storage\";\r\nimport Write from \"../routes/Write\";\r\nimport Review from '../routes/Review'\r\nimport Edit from '../routes/Edit'\r\nimport Detail from \"routes/Detail\";\r\nimport SearchResult from \"routes/SearchResult\";\r\n\r\nconst Router = () => {\r\n    return(\r\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n            <Switch>\r\n                <PublicRoute path='/' component={Home} exact></PublicRoute>\r\n                <PublicRoute path='/searchresult' component={SearchResult} exact></PublicRoute>\r\n                <PublicRoute restricted path='/login' component={Login}  exact></PublicRoute>\r\n                <PublicRoute restricted path='/signup' component={Signup} exact></PublicRoute>\r\n                <PrivateRoute path='/storage' component={Storage} exact></PrivateRoute>\r\n                <PrivateRoute path='/write/:id' component={Write} exact></PrivateRoute>\r\n                <PrivateRoute path='/write' component={Write} exact></PrivateRoute>\r\n                <PrivateRoute path='/info' component={Info} exact></PrivateRoute>\r\n                <PrivateRoute path='/review' component={Review} exact></PrivateRoute>\r\n                <PrivateRoute path='/detail' component={Detail} exact></PrivateRoute>\r\n                <PrivateRoute path='/detail/:bookid' component={Detail} exact></PrivateRoute>\r\n                <PrivateRoute path='/edit' component={Edit} exact></PrivateRoute>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router","import React from 'react'\nimport Router from './components/Router'\nimport Navigation from './components/Navigation';\nimport Top from './components/Top'\nimport './App.css'\nimport {createGlobalStyle} from 'styled-components'\n\nconst Global = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\n*{\n  box-sizing: border-box;\n}\nbody {\nfont-family: 'YanoljaYacheR';\n  width: 100vw;\n  height: 100vh;\n}\na{\n  text-decoration: none;\n  color: inherit;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}`\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router />\n      <Global />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport {RecoilRoot} from 'recoil' //RecoilRoot로 app을 감싸줘야함\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}